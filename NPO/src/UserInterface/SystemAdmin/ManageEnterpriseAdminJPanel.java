/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.SystemAdmin;

import Business.Country.Country;
import Business.EcoSystem;
import Business.Employee.Employee;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Role.BloodDonationAdminRole;
import Business.Role.CountryAdminRole;
import Business.Role.FoodDonationAdminRole;
import Business.Role.FundDonationAdminRole;
import Business.Role.Role;
import Business.Role.StateAdminRole;
import Business.Role.VoluntaryDonationAdminRole;
import Business.UserAccount.UserAccount;
import Business.email.PasswordGenerator;
import Business.email.SendEmail;
import java.awt.CardLayout;
import java.awt.Component;
import java.util.ArrayList;
import java.util.Properties;
import javax.mail.Message;
import javax.mail.MessagingException;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Malick
 */
public class ManageEnterpriseAdminJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private EcoSystem system;
    private ArrayList<Enterprise> tempEnterpriseList;

    /**
     * Creates new form ManageEnterpriseJPanel
     */
    public ManageEnterpriseAdminJPanel(JPanel userProcessContainer, EcoSystem system) {
        initComponents();

        this.userProcessContainer = userProcessContainer;
        this.system = system;

        populateTable();
        populateComboBox();
    }

    private void populateTable() {
        DefaultTableModel model = (DefaultTableModel) enterpriseJTable.getModel();

        model.setRowCount(0);
        for (Network network : system.getNetworkList()) {
            for (Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()) {
                for (UserAccount userAccount : enterprise.getUserAccountDirectory().getUserAccountList()) {
                    Object[] row = new Object[3];
                    row[0] = enterprise.getName();
                    row[1] = network.getNetworkCity();
                    row[2] = userAccount.getUsername();

                    model.addRow(row);
                }
            }
        }
    }

    private void populateComboBox() {
        comboCountry.addItem("Select");
        for (Country c : system.getCountryList()) {
            comboCountry.addItem(c.getCountryName());
        }

        comboCity.removeAllItems();

        enterpriseLevel.addItem("City");
        enterpriseLevel.addItem("State");
        enterpriseLevel.addItem("Country");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        enterpriseJTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        comboCity = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        usernameJTextField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        comboEnterprise = new javax.swing.JComboBox();
        submitJButton = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        nameJTextField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        backJButton = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        btnDelete = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        comboCountry = new javax.swing.JComboBox<>();
        comboState = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        enterpriseLevel = new javax.swing.JComboBox<>();
        txtEmail = new javax.swing.JTextField();

        setBackground(new java.awt.Color(153, 153, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        enterpriseJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "City", "Enterprise Name", "Employee Name", "Email"
            }
        ));
        jScrollPane1.setViewportView(enterpriseJTable);
        if (enterpriseJTable.getColumnModel().getColumnCount() > 0) {
            enterpriseJTable.getColumnModel().getColumn(0).setResizable(false);
            enterpriseJTable.getColumnModel().getColumn(1).setResizable(false);
            enterpriseJTable.getColumnModel().getColumn(2).setResizable(false);
            enterpriseJTable.getColumnModel().getColumn(3).setResizable(false);
        }

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 70, 523, 95));

        jLabel1.setText("City");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(89, 250, 40, -1));

        comboCity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboCityActionPerformed(evt);
            }
        });
        add(comboCity, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 250, 136, -1));

        jLabel2.setText("Username");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 320, -1, -1));
        add(usernameJTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 310, 136, -1));

        jLabel3.setText("Enterprise");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 280, -1, -1));

        comboEnterprise.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboEnterpriseActionPerformed(evt);
            }
        });
        add(comboEnterprise, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 280, 136, -1));

        submitJButton.setText("Add");
        submitJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitJButtonActionPerformed(evt);
            }
        });
        add(submitJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 450, 70, -1));

        jLabel4.setText("Email ID");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 360, -1, -1));
        add(nameJTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 390, 136, -1));

        jLabel5.setText("Employe Name");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 400, -1, -1));

        backJButton.setText("<< Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });
        add(backJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 450, -1, -1));

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel12.setText("Enterprise Admin Management");
        add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 20, -1, -1));

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });
        add(btnDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 450, -1, -1));

        btnUpdate.setText("Update");
        add(btnUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 450, -1, -1));

        jLabel6.setText("State");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 220, -1, -1));

        jLabel7.setText("Country");
        add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 190, -1, -1));

        comboCountry.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboCountryActionPerformed(evt);
            }
        });
        add(comboCountry, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 190, 130, 20));

        comboState.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboStateActionPerformed(evt);
            }
        });
        add(comboState, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 220, 130, -1));

        jLabel8.setText("Enterprise Admin Level");
        add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 420, -1, -1));

        enterpriseLevel.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "select" }));
        enterpriseLevel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enterpriseLevelActionPerformed(evt);
            }
        });
        add(enterpriseLevel, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 420, 130, -1));

        txtEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEmailActionPerformed(evt);
            }
        });
        add(txtEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 350, 140, 30));
    }// </editor-fold>//GEN-END:initComponents

    private void comboCityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboCityActionPerformed

        //comboCity.removeAllItems();
        //comboCity.addItem("Select");
        String networkName = "";
        if (comboCity.getSelectedItem() instanceof Network) {
            networkName = ((Network) comboCity.getSelectedItem()).getNetworkCity();
        } else {
            networkName = (String) comboCity.getSelectedItem();
        }

        if (networkName != "") {
            for (Network n : system.getNetworkList()) {
                if (n.getNetworkCity().equalsIgnoreCase(networkName)) {
                    tempEnterpriseList = n.getEnterpriseDirectory().getEnterpriseList();
                    comboEnterprise.removeAllItems();
                    comboEnterprise.addItem("Select");
                    for (Enterprise e : tempEnterpriseList) {
                        comboEnterprise.addItem(e.getName());
                    }
                }
            }

        }


    }//GEN-LAST:event_comboCityActionPerformed

    private void submitJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitJButtonActionPerformed
        
        PasswordGenerator inst = new PasswordGenerator();
        String password = inst.getPassword();
        Enterprise enterprise = null;
        /*if(comboCity.getSelectedIndex() == -1 || 
                comboCountry.getSelectedIndex() == -1 || 
                comboEnterprise.getSelectedIndex() == -1 || 
                comboState.getSelectedIndex() == -1 || 
                usernameJTextField.getText().equals("") || 
                nameJTextField.getText().equals("") || 
                txtEmail.getText().equals("") || 
                !usernameJTextField.getText().matches("[A-Za-z]+") || 
                !nameJTextField.getText().matches("[A-Za-z]+") ||
                enterpriseLevel.getSelectedIndex() == -1
                ) {
            JOptionPane.showMessageDialog(this, "Invalid Value Provided", "Warning", JOptionPane.PLAIN_MESSAGE);
            return;
        }*/
        if (comboEnterprise.getSelectedItem() instanceof Enterprise) {
            enterprise = (Enterprise) comboEnterprise.getSelectedItem();
        } else {
            String enter = (String) comboEnterprise.getSelectedItem();
            for (Enterprise e : tempEnterpriseList) {
                if (e.getName().equalsIgnoreCase(enter)) {
                    enterprise = e;
                    break;
                }
            }
        }
        String username = usernameJTextField.getText();
        //String password = "123";
        String name = nameJTextField.getText();
        String selection = (String) enterpriseLevel.getSelectedItem();

        Employee employee = enterprise.getEmployeeDirectory().createEmployee(name);
        if(enterprise.getEnterpriseType().toString()==(Enterprise.EnterpriseType.NPOBLOOD.getValue()))
        {
             UserAccount account = enterprise.getUserAccountDirectory().createUserAccount(username, password, employee, new BloodDonationAdminRole());
        }
        else if(enterprise.getEnterpriseType().toString()==(Enterprise.EnterpriseType.NPOFOOD.getValue()))
        {
             UserAccount account = enterprise.getUserAccountDirectory().createUserAccount(username, password, employee, new FoodDonationAdminRole());
        }
        else if(enterprise.getEnterpriseType().toString()==(Enterprise.EnterpriseType.NPOVOLUNTARY.getValue()))
        {
             UserAccount account = enterprise.getUserAccountDirectory().createUserAccount(username, password, employee, new VoluntaryDonationAdminRole());
        }
        else if(enterprise.getEnterpriseType().toString()==(Enterprise.EnterpriseType.NPOFUND.getValue()))
        {
             UserAccount account = enterprise.getUserAccountDirectory().createUserAccount(username, password, employee, new FundDonationAdminRole());
        }
        populateTable();
        SendEmail se = new SendEmail();
        se.main(txtEmail.getText(), "Password mail", password);
    }//GEN-LAST:event_submitJButtonActionPerformed

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed
        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        SystemAdminWorkAreaJPanel sysAdminwjp = (SystemAdminWorkAreaJPanel) component;
        sysAdminwjp.populateTree();
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void comboEnterpriseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboEnterpriseActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboEnterpriseActionPerformed

    private void comboStateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboStateActionPerformed
        // TODO add your handling code here:
        comboCity.removeAllItems();
        comboCity.addItem("Select");
        //comboCity.addItem("Select");
        String countName = (String) comboCountry.getSelectedItem();
        String stateName = (String) comboState.getSelectedItem();
        if (countName != null && stateName != null) {
            for (Network network : system.getNetworkList()) {
                if (countName.equalsIgnoreCase(network.getNetworkCountry())
                        && stateName.equalsIgnoreCase(network.getNetworkState())) {
                    comboCity.addItem(network);
                }
            }
        }


    }//GEN-LAST:event_comboStateActionPerformed

    private void comboCountryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboCountryActionPerformed
        String selectedCountry = (String) comboCountry.getSelectedItem();
        for (Country c : system.getCountryList()) {
            if (c.getCountryName().equalsIgnoreCase(selectedCountry)) {
                comboState.removeAllItems();
                comboState.addItem("Select");
                for (String s : c.getStateNames()) {
                    comboState.addItem(s);
                }
                break;
            }
        }
        comboCity.removeAllItems();
        comboCity.addItem("Select");
        comboEnterprise.removeAllItems();
        comboEnterprise.addItem("Select");
        // TODO add your handling code here:
    }//GEN-LAST:event_comboCountryActionPerformed

    private void enterpriseLevelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enterpriseLevelActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_enterpriseLevelActionPerformed

    private void txtEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEmailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEmailActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backJButton;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JComboBox comboCity;
    private javax.swing.JComboBox<String> comboCountry;
    private javax.swing.JComboBox comboEnterprise;
    private javax.swing.JComboBox<String> comboState;
    private javax.swing.JTable enterpriseJTable;
    private javax.swing.JComboBox<String> enterpriseLevel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField nameJTextField;
    private javax.swing.JButton submitJButton;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField usernameJTextField;
    // End of variables declaration//GEN-END:variables


}
