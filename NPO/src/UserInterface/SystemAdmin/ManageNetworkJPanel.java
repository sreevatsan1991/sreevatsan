/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.SystemAdmin;

import Business.Country.Country;
import Business.EcoSystem;
import Business.Network.Network;
import java.awt.CardLayout;
import java.awt.Component;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author raunak
 */
public class ManageNetworkJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private EcoSystem system;

    /**
     *
     * Creates new form ManageNetworkJPanel
     */
    public ManageNetworkJPanel(JPanel userProcessContainer, EcoSystem system) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.system = system;
        populateNetworkTable();
        populateCombo();
        }
    
public void populateCombo(){
    comboCountry.removeAllItems();
    comboCountry.addItem("Select");
        for (Country c : system.getCountryList()) {
            comboCountry.addItem(c.getCountryName());
}
}
    private void populateNetworkTable() {
        DefaultTableModel model = (DefaultTableModel) tableJNetwork.getModel();

        model.setRowCount(0);
        for (Network network : system.getNetworkList()) {
            Object[] row = new Object[3];
            row[0] = network.getNetworkCountry();
            row[1] = network.getNetworkState();
            row[2] = network;
            model.addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tableJNetwork = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        btnAdd = new javax.swing.JButton();
        txtCity = new javax.swing.JTextField();
        btnBack = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        comboState = new javax.swing.JComboBox<>();
        comboCountry = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        btnDelete = new javax.swing.JButton();

        setBackground(new java.awt.Color(153, 153, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tableJNetwork.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Country", "State", "City"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tableJNetwork);
        if (tableJNetwork.getColumnModel().getColumnCount() > 0) {
            tableJNetwork.getColumnModel().getColumn(0).setResizable(false);
            tableJNetwork.getColumnModel().getColumn(1).setResizable(false);
            tableJNetwork.getColumnModel().getColumn(2).setResizable(false);
        }

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(132, 63, 404, 91));

        jLabel1.setText("City");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(166, 257, -1, -1));

        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });
        add(btnAdd, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 350, 70, -1));
        add(txtCity, new org.netbeans.lib.awtextra.AbsoluteConstraints(211, 254, 93, -1));

        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        add(btnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(132, 350, 80, -1));

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel12.setText("Network Management");
        add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 20, -1, -1));

        comboState.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboStateActionPerformed(evt);
            }
        });
        add(comboState, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 220, 100, -1));

        comboCountry.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboCountryActionPerformed(evt);
            }
        });
        add(comboCountry, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 190, 100, -1));

        jLabel2.setText("State");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 220, -1, -1));

        jLabel3.setText("Country");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 190, -1, -1));

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });
        add(btnDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 350, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed

        String name = txtCity.getText();
        if(comboCountry.getSelectedItem().equals("") || comboCountry.getSelectedItem().equals("Select")){
           JOptionPane.showMessageDialog(null, "Please enter the Country name");
            return;
        }
        if(comboState.getSelectedItem().equals("")){
           JOptionPane.showMessageDialog(null, "Please enter the State name");
            return;
        }
        if(name.equals("")){
            JOptionPane.showMessageDialog(null, "Please enter the city name");
            return;
        }
        for(Network n : system.getNetworkList()){
            if(name.equals(n)){
                JOptionPane.showMessageDialog(null, "City exists");
                return;
                
            }
        }
        
        Network network = system.createAndAddNetwork(name, (String) comboCountry.getSelectedItem(), (String) comboState.getSelectedItem());
        network.setNetworkCity(name);

        populateNetworkTable();
        txtCity.setText("");
        populateCombo();
        
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        SystemAdminWorkAreaJPanel sysAdminwjp = (SystemAdminWorkAreaJPanel) component;
        sysAdminwjp.populateTree();
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed

    private void comboCountryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboCountryActionPerformed
        comboState.removeAllItems();
        String selectedCountry = (String) comboCountry.getSelectedItem();
        for (Country c : system.getCountryList()) {
            if (c.getCountryName().equalsIgnoreCase(selectedCountry)) {
                for (String s : c.getStateNames()) {
                    comboState.addItem(s);
                }
                break;
            }
        }
    }//GEN-LAST:event_comboCountryActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        
        int selectedRow = tableJNetwork.getSelectedRow();
            if (selectedRow >=0){
                int dialogButton = JOptionPane.YES_NO_OPTION;
                int dialogResult = JOptionPane.showConfirmDialog(null, "Would you like to delete the network details", "Warning", dialogButton);
                if (dialogResult == JOptionPane.YES_OPTION){
                    Network network = (Network) tableJNetwork.getValueAt(selectedRow, 2);
                    system.deleteNetwork(network);
                    populateNetworkTable();
                    populateCombo();
                }
                }
            else{
                JOptionPane.showMessageDialog(null, "Please select a row from table to delete", "Warning", JOptionPane.WARNING_MESSAGE);
                
            }
        
    // TODO add your handling code here:
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void comboStateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboStateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboStateActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnDelete;
    private javax.swing.JComboBox<String> comboCountry;
    private javax.swing.JComboBox<String> comboState;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tableJNetwork;
    private javax.swing.JTextField txtCity;
    // End of variables declaration//GEN-END:variables
}
